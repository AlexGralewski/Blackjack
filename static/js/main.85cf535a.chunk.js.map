{"version":3,"sources":["components/Footer.js","components/Menu.js","components/BetSelection.js","components/CardDisplay.js","components/PlayGame.js","components/Saves.js","components/Rules.js","components/Credits.js","components/HighScores.js","components/NameInput.js","components/RoundHistory.js","App.js","index.js"],"names":["Footer","Menu","props","resetGameState","loadSaves","loadScoreboard","className","to","onClick","localStorage","clear","BetSelection","changeBet","confirmBet","bet","balance","saveGame","roundCount","type","name","value","step","min","max","onChange","style","display","CardDisplay","src","card","alt","PlayGame","nextRound","endGamePopup","endRoundPopup","stake","dealerPoints","username","playerPoints","hit","playerHand","dealerHand","doubledown","stand","roundResult","roundHistory","saveGameScore","map","index","console","log","Saves","saves","loadChosenSave","save","id","round","Rules","Credits","href","title","HighScores","scoreBoard","record","score","NameInput","changeName","RoundHistory","object","App","setState","deck","handleBetChange","e","target","state","alert","prevState","shuffleCards","fetch","then","response","json","data","deck_id","dealStartingHands","dealCard","whichHand","total","cards","Number","image","handleHit","handleDoubleDown","dealerDraw","roundEnd","countDealerPoints","setTimeout","saveRoundHistory","winlosedraw","gameEnd","getItem","JSON","parse","push","setItem","stringify","allSaves","saveIndex","splice","scores","sort","a","b","bind","this","exact","path","render","React","Component","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.85cf535a.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Footer() {\r\n  return(\r\n    <footer>\r\n      Created by Aleksander Gralewski\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport Footer from \"./Footer\"\r\n\r\nfunction Menu(props) {\r\n  const {resetGameState, loadSaves, loadScoreboard} = props\r\n  return(\r\n    <div className=\"menu\">\r\n      <div className=\"menu-title\">Blackjack</div>\r\n      <Link to=\"/username\" onClick={() => {resetGameState()}}>\r\n        <button className=\"menu-item new-game\">\r\n          New Game\r\n        </button>\r\n      </Link>\r\n      <Link to=\"/loadgame\" onClick={() => {loadSaves()}}>\r\n        <button className=\"menu-item\">\r\n          Load Game\r\n        </button>\r\n      </Link>\r\n      <Link to=\"/highscores\" onClick={() => {loadScoreboard()}} >\r\n        <button className=\"menu-item\">\r\n          High Scores\r\n        </button>\r\n      </Link>\r\n      <Link to=\"/rules\" >\r\n        <button className=\"menu-item\">\r\n          Rules\r\n        </button>\r\n      </Link>\r\n      <Link to=\"/credits\" >\r\n        <button className=\"menu-item\">\r\n          Credits\r\n        </button>\r\n      </Link>\r\n      <button className=\"reset-game\" onClick={() => {localStorage.clear()}}>\r\n        Reset Game\r\n      </button>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction BetSelection(props) {\r\n  const { changeBet, confirmBet, bet, balance, saveGame, roundCount } = props\r\n  return(\r\n    <div className=\"bet-selection\">\r\n      <h1>BET</h1> \r\n      <div className=\"bet-buttons\">         \r\n        <input \r\n          type=\"button\"\r\n          name=\"bet\"\r\n          value=\"5\"\r\n          onClick={changeBet}/>\r\n        <input \r\n          type=\"button\"\r\n          name=\"bet\"\r\n          value=\"10\"\r\n          onClick={changeBet}/>\r\n        <input \r\n          type=\"button\"\r\n          name=\"bet\"\r\n          value=\"25\"\r\n          onClick={changeBet}/>\r\n        <input \r\n          type=\"button\"\r\n          name=\"bet\"\r\n          value=\"50\"\r\n          onClick={changeBet}/>\r\n        <input \r\n          type=\"button\"\r\n          name=\"bet\"\r\n          value=\"100\"\r\n          onClick={changeBet}/>\r\n        <input \r\n          type=\"button\"\r\n          name=\"bet\"\r\n          value=\"500\"\r\n          onClick={changeBet}/>\r\n        <input \r\n          type=\"button\"\r\n          name=\"bet\"\r\n          value={balance}\r\n          onClick={changeBet}/>\r\n      </div>\r\n      <div className=\"custom-bet\">\r\n        <label>Custom Bet</label>\r\n        <input \r\n          type=\"number\"\r\n          name=\"bet\"\r\n          step=\"5\"\r\n          value={bet}\r\n          min=\"0\"\r\n          max={balance}\r\n          onChange={changeBet}\r\n          />\r\n      </div>\r\n      <div className=\"bet-balance-information\">\r\n        <p>Your bet: {balance >= bet && bet >= 0 ? `${bet}$`: \"Invalid bet\"}</p>\r\n        <p>Possible winnings: {balance >= bet && bet >= 0 ? `${bet * 2.5}$`: \"Invalid bet\"}</p>\r\n        <p>Your balance: {balance}$</p>\r\n        <p>Balance after bet: {balance >= bet && bet >= 0 ? `${balance-bet}$`: \"Invalid bet\"}</p>\r\n      </div>\r\n      <div className=\"bet-link-buttons\">\r\n        <Link to=\"/\">\r\n          <button>\r\n            Quit\r\n          </button>\r\n        </Link>\r\n        <Link to=\"/\" onClick={() => saveGame()} style={roundCount > 1 ? { display: \"flex\" } : { display: \"none\" }}>\r\n          <button>\r\n            Save and Quit\r\n          </button>\r\n        </Link>\r\n        <Link to=\"/game\" style={bet > 0 && balance >= bet ? { display:\"flex\"} : { display:\"none\"}}>\r\n          <button onClick={confirmBet}>\r\n            Confirm\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BetSelection","import React from \"react\"\r\n\r\nfunction CardDisplay(props) {\r\n  return(\r\n    <div className=\"card\">\r\n      <img src={props.card} alt=\"card\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardDisplay","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport CardDisplay from \"./CardDisplay\"\r\n\r\nfunction PlayGame(props) {\r\n  const { saveGame, nextRound, endGamePopup, endRoundPopup,\r\n    bet, stake, balance, dealerPoints, username, playerPoints, hit, playerHand,\r\n    dealerHand, roundCount, doubledown, stand, roundResult, roundHistory, saveGameScore, \r\n    resetGameState } = props\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-table\" >\r\n        <div className=\"dealer-side\">\r\n          <div className=\"name-points\">\r\n            <div className=\"name\">Dealer</div>\r\n            <div className=\"points\">{dealerPoints}</div>\r\n          </div>\r\n          <div className=\"hand\">\r\n            {dealerHand.map((card, index) => <CardDisplay key={index} card={card} />)}\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"neutral\">\r\n          <div className=\"values-info\">\r\n            <p>Round: {roundCount}/5</p>\r\n            <p>Bet: {bet}</p>\r\n            <p>Stake: {stake} </p>\r\n            <p>Balance: {balance}</p>\r\n          </div>\r\n          <div className=\"table-buttons\">\r\n            <Link to=\"/roundhistory\" onClick={()=> {console.log(roundHistory)}}>\r\n              <button>\r\n                Round history\r\n              </button>\r\n            </Link>\r\n            <Link to=\"/\" onClick={() => {saveGame()}} style={balance === 0 ? { display: \"none\" } : { display: \"flex\" }}>\r\n              <button>\r\n                Save and Quit\r\n              </button>\r\n            </Link>\r\n            <Link to=\"/\" onClick={() => {resetGameState()}}>\r\n              <button>\r\n                Quit\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"deck\">\r\n            <div className=\"card card1 reversed\" />\r\n            <div className=\"card card2 reversed\" />\r\n            <div className=\"card card3 reversed\" />\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"player-side\">\r\n          <div className=\"name-points\">\r\n            <div className=\"name\">{username}</div>\r\n            <div className=\"points\">{playerPoints}</div>\r\n          </div>\r\n          <div className=\"hand\">\r\n            {playerHand.map((card, index) => <CardDisplay key={index} card={card} />)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"hit-stand-double-buttons\">\r\n        <input\r\n          type=\"button\"\r\n          value=\"Hit\"\r\n          onClick={() => {\r\n            hit()\r\n          }\r\n          }\r\n          style={playerPoints >= 21 ? { display: \"none\" } : { display: \"block\" }}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"Double Down\"\r\n          style={playerPoints >= 21 || balance<bet ? { display: \"none\" } : { display: \"block\" }}\r\n          onClick={() => {\r\n            doubledown()\r\n          }\r\n          } />\r\n        <input\r\n          type=\"button\"\r\n          value=\"Stand\"\r\n          onClick={() => {\r\n            stand()\r\n          }\r\n          } />\r\n      </div>\r\n      <div className=\"popup\" style={{ display: endRoundPopup }}>\r\n        You {roundResult} round {roundCount}\r\n          <div className=\"end-round-buttons\">\r\n          <Link to=\"/betselection\" onClick={nextRound}>\r\n            <button>\r\n              Next Round\r\n              </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"popup\" style={{ display: endGamePopup }}>\r\n        Game Over\r\n        <div className=\"end-game-buttons\">\r\n          <Link to=\"/\" onClick={saveGameScore}>\r\n            <button>\r\n              Save score and quit\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/\" onClick={() => {resetGameState()}}>\r\n            <button>\r\n              Quit\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayGame","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction Saves(props) {\r\n  const {saves, loadChosenSave} = props\r\n  return(\r\n    <div className=\"saves\">\r\n      <h1>Saves</h1>\r\n      <div className=\"saves-list\">\r\n        {saves === null || saves === [] ? \"no saves yet\" :\r\n        saves.map((save,id )=> (\r\n          <div className=\"save\">\r\n              <div className=\"save-id\">{id+1}</div>\r\n              <div className=\"save-text\">\r\n                <div className=\"save-username\">{save.username}</div>\r\n                <div className=\"save-round\">Round: {save.round}/5</div>\r\n                <div className=\"save-balance\">Balance: {save.balance}</div>\r\n              </div>\r\n              \r\n              <Link to=\"/betselection\" onClick={() => {loadChosenSave(id)}}>\r\n                <button>\r\n                  Load\r\n                </button>\r\n                </Link>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <Link to=\"/\">\r\n        <button>\r\n          Back\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Saves","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport Footer from \"./Footer\"\r\n\r\nfunction Rules() {\r\n  return (\r\n    <div className=\"rules\">\r\n      <h1>Rules</h1>\r\n      <ul>\r\n        <li>Single player vs automated dealer</li>\r\n        <li>Decks used: 6</li>\r\n        <li>Starting balance: 1000$</li>\r\n        <li>Game length: 5 rounds (or loss of all the funds)</li>\r\n        <li>Dealer will stand if he has more points than 17 or the player</li>\r\n        <li>Ace is counted as 1 or 11 depending what is better for the player</li>\r\n        <li>Round possible winnings are always 1.5x bet</li>\r\n        <li>Game actions: hit - draw another card, double down - draw just one more card and stand, stand - wait for dealers turn</li>\r\n      </ul>\r\n      <Link to=\"/\">\r\n        <button>\r\n          Back\r\n        </button>\r\n      </Link>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rules","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport Footer from \"./Footer\"\r\n\r\nfunction Credits(props) {\r\n  return(\r\n    <div className=\"credits\">\r\n      <h1>Credits</h1>\r\n      <ul>\r\n        <li>Deck of cards API: <a href=\"https://github.com/crobertsbmw\">Chase Roberts</a></li>\r\n        <li>Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></li>\r\n      </ul>\r\n      <Link to=\"/\">\r\n        <button>\r\n          Back\r\n        </button>\r\n      </Link>\r\n      <Footer />\r\n    </div>\r\n  ) \r\n}\r\n\r\nexport default (Credits)","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport Footer from \"./Footer\"\r\n\r\nfunction HighScores(props) {\r\n  const {scoreBoard} = props\r\n  return(\r\n    <div className=\"high-scores\">\r\n      <h1>High Scores</h1>\r\n      <div className=\"high-score-list\">\r\n        {scoreBoard === null || scoreBoard === [] ? \"no saved scores yet\" :\r\n        scoreBoard.map((record,id )=> (\r\n          <div className=\"high-score-list-item\">\r\n            <div>{id+1}. {record.username} </div>\r\n            <div>{record.score} </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Link to=\"/\">\r\n        <button>\r\n          Back\r\n        </button>\r\n      </Link>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HighScores","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction NameInput(props) {\r\n  const { username, changeName } = props\r\n  return(\r\n    <div className=\"name-input\">\r\n      <h1>Choose your username</h1>\r\n      <input \r\n        type=\"text\"\r\n        name=\"username\"\r\n        value={username}\r\n        onChange={changeName} />\r\n      <div className=\"name-link-buttons\">\r\n        <Link to=\"/\">\r\n          <button>\r\n            Back\r\n          </button>\r\n        </Link>\r\n        <Link to=\"/betselection\" style={username === \"\" ? { display:\"none\"} : { display:\"flex\"}} >\r\n          <button>\r\n            Confirm\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NameInput","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport CardDisplay from \"./CardDisplay\"\r\n\r\nfunction RoundHistory(props) {\r\n  const { roundHistory } = props\r\n\r\n  return (\r\n    <div className=\"round-history\">\r\n      <h1>Round History</h1>\r\n      <div className=\"round-history-list\">\r\n        {roundHistory.map(object => (\r\n          <div className=\"round-history-list-item\">\r\n            <h2>Round: {object.roundCount}</h2>\r\n            <div className=\"hand\">{object.playerHand.map(card => (<CardDisplay card={card} />))}</div>\r\n            <div>Player points: {object.playerPoints}</div>\r\n            <div className=\"hand\">{object.dealerHand.map(card => (<CardDisplay card={card} />))}</div>\r\n            <div>Dealer points: {object.dealerPoints}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Link to=\"/game\">\r\n        <button>\r\n          Back\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoundHistory","import React from \"react\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\n\nimport Menu from \"./components/Menu\"\nimport BetSelection from \"./components/BetSelection\"\nimport PlayGame from \"./components/PlayGame\"\nimport Saves from \"./components/Saves\"\nimport Rules from \"./components/Rules\"\nimport Credits from \"./components/Credits\"\nimport HighScores from \"./components/HighScores\"\nimport NameInput from \"./components/NameInput\"\nimport \"./App.css\"\nimport RoundHistory from \"./components/RoundHistory\"\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      username: 'Player', //Player's username\n      bet: 5, //Player's current bet in $\n      balance: 1000, //Player's total balance in $\n      stake: 0, //Possible winnings of the current round (bet + 1,5 bet)\n      playerHand: [], //Player's hand\n      playerPoints: 0, //Player's hand score\n      dealerHand: [], //Dealer's hand\n      dealerPoints: 0, //Dealer's hand score\n      deck: 'bhwcmpj3ltym', //deckCode\n      roundCount: 1, // round counter (out of 5)\n      endRoundPopup: \"none\", //determines if end-round popup is displayed\n      endGamePopup: \"none\", //determines if end-round popup is displayed\n      roundResult: \"\",  // tells if current round was \"won\", \"drew\", \"lost\"\n      roundHistory: [], //array containing data about previous hands\n      scoreBoard: [], //array containing high scores, loaded upon choosing option high scores in main menu\n      saves: [] //array containing saves\n    }\n    this.shuffleCards = this.shuffleCards.bind(this)\n    this.dealStartingHands = this.dealStartingHands.bind(this)\n    this.confirmBet = this.confirmBet.bind(this)\n    this.handleBetChange = this.handleBetChange.bind(this)\n    this.dealCard = this.dealCard.bind(this)\n  }\n\n  resetGameState = () => {\n    this.setState({\n      username: 'Player',\n      bet: 5,\n      balance: 1000,\n      stake: 0,\n      playerHand: [],\n      playerPoints: 0,\n      dealerHand: [],\n      dealerPoints: 0,\n      deck: 'bhwcmpj3ltym',\n      roundCount: 1,\n      endRoundPopup: \"none\",\n      endGamePopup: \"none\",\n      roundResult: \"\",\n      roundHistory: [],\n      scoreBoard: []\n    })\n  }\n\n  //handles change in input of bet\n  handleBetChange = e => {\n    const { name, value } = e.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  //handles \"confirm bet\" button click\n  confirmBet = () => {\n    const { bet, balance } = this.state\n    if (bet > balance || bet <= 0) {\n      alert(\"Bet should be positive number smaller than your balance.\")\n    } else {\n\n      this.setState(prevState => {\n        return ({\n          balance: prevState.balance - bet,\n          stake: bet * 2.5,\n          endRoundPopup: \"none\",\n          endGamePopup: \"none\"\n        })\n      }, this.shuffleCards())\n    }\n  }\n\n  //shuffles cards, automatical on \"confirm bet\" button click\n  shuffleCards = () => {\n    fetch('https://deckofcardsapi.com/api/deck/bhwcmpj3ltym/shuffle/')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          deck: data.deck_id\n        }, this.dealStartingHands())\n      });\n  }\n\n  //deals starting hands to player and dealer\n  dealStartingHands = () => {\n    this.dealCard('player')\n    this.dealCard('dealer')\n    this.dealCard('player')\n  }\n\n  //deals cards (and adds points of the dealt card)\n  dealCard = whichHand => {\n    fetch(`https://deckofcardsapi.com/api/deck/${this.state.deck}/draw/?count=1`)\n      .then(response => response.json())\n      .then(data => {\n        this.setState(prevState => {\n          let total = 0\n          if (data.cards[0].value === \"ACE\") {\n            if (total + 11 > 21) {\n              total += 1\n            } else {\n              total += 11\n            }\n          } else if (data.cards[0].value === \"KING\" || data.cards[0].value === \"QUEEN\" || data.cards[0].value === \"JACK\") {\n            total += 10\n          } else {\n            total += Number(data.cards[0].value)\n          }\n          if (whichHand === 'player') {\n            return ({\n              playerHand: [...prevState.playerHand, data.cards[0].image],\n              playerPoints: prevState.playerPoints + total\n            })\n          } else {\n            return ({\n              dealerHand: [...prevState.dealerHand, data.cards[0].image,],\n              dealerPoints: prevState.dealerPoints + total\n            })\n          }\n        })\n      })\n  }\n\n  //handles \"hit\" button click\n  handleHit = () => {\n    this.dealCard('player')\n  }\n\n  //handles \"doubledown\" button click\n  handleDoubleDown = () => {\n    this.dealCard('player')\n    this.setState(prevState => {\n      return ({\n        bet: prevState.bet * 2,\n        balance: prevState.balance - prevState.bet,\n        stake: prevState.bet * 5,\n      })\n    }, this.dealerDraw())\n  }\n\n  //draws cards for dealer after player chose to \"stand\" or \"double down\"\n  dealerDraw = () => {\n    if (this.state.playerPoints > 21) {\n      this.roundEnd()\n    } else {\n      fetch(`https://deckofcardsapi.com/api/deck/${this.state.deck}/draw/?count=1`)\n        .then(response => response.json())\n        .then(data => {\n          this.setState(prevState => {\n            let total = 0\n            if (data.cards[0].value === \"ACE\") {\n              if (this.state.dealerPoints + 11 > 21) {\n                total += 1\n              } else {\n                total += 11\n              }\n            } else if (data.cards[0].value === \"KING\" || data.cards[0].value === \"QUEEN\" || data.cards[0].value === \"JACK\") {\n              total += 10\n            } else {\n              total += Number(data.cards[0].value)\n            }\n            return ({\n              dealerHand: [...prevState.dealerHand, data.cards[0].image,],\n              dealerPoints: prevState.dealerPoints + total\n            })\n          }, this.countDealerPoints())\n        })\n    }\n  }\n\n  //counts dealer card points after drawing\n  countDealerPoints = () => {\n    setTimeout(() => {\n      if (this.state.dealerPoints < 17 && this.state.dealerPoints <= this.state.playerPoints) {\n        this.dealerDraw()\n      } else {\n        this.roundEnd()\n      }\n    }, 1000)\n  }\n\n  //round end event\n  roundEnd = () => {\n    const { playerPoints, dealerPoints } = this.state\n    this.saveRoundHistory()\n    this.setState(prevState => {\n      let winlosedraw\n      if (prevState.roundCount === 5) {\n        this.gameEnd()\n      }\n      if ((playerPoints > dealerPoints && playerPoints < 22) || dealerPoints > 21) {\n        winlosedraw = \"won\"\n        return ({\n          balance: prevState.balance + prevState.stake,\n          endRoundPopup: \"flex\",\n          roundResult: winlosedraw\n        })\n      } else if (playerPoints === dealerPoints) {\n        winlosedraw = \"drew\"\n        return ({\n          balance: prevState.balance + Number(prevState.bet),\n          endRoundPopup: \"flex\",\n          roundResult: winlosedraw\n\n        })\n      } else {\n        winlosedraw = \"lost\"\n        if (this.state.balance === 0) {\n          this.gameEnd()\n        }\n\n        return ({\n          endRoundPopup: \"flex\",\n          roundResult: winlosedraw\n        })\n      }\n    })\n  }\n\n  //saves rounds history\n  saveRoundHistory = () => {\n    this.setState(prevState => {\n      return ({\n        roundHistory: [...prevState.roundHistory, {\n          roundCount: this.state.roundCount,\n          playerHand: this.state.playerHand,\n          playerPoints: this.state.playerPoints,\n          dealerHand: this.state.dealerHand,\n          dealerPoints: this.state.dealerPoints,\n        }]\n      })\n    })\n  }\n\n  //handles click of \"next round\" button\n  nextRound = () => {\n    this.setState(prevState => {\n      return ({\n        playerHand: [],\n        playerPoints: 0,\n        dealerHand: [],\n        dealerPoints: 0,\n        roundCount: prevState.roundCount + 1,\n        endRoundPopup: \"none\"\n      })\n    })\n  }\n\n  //end game event\n  gameEnd = () => {\n    this.setState({\n      endGamePopup: \"flex\"\n    })\n  }\n\n  //saves current state of the game\n  saveGame = () => {\n    let saves = localStorage.getItem('saves')\n    saves = JSON.parse(saves)\n    if (saves === null) {\n      saves = [{ username: this.state.username, balance: this.state.balance, round: this.state.roundCount }]\n    } else {\n      saves.push({ username: this.state.username, balance: this.state.balance, round: this.state.roundCount })\n    }\n\n    localStorage.setItem('saves', JSON.stringify(saves))\n  }\n\n  //loads saves page\n  loadSaves = () => {\n    let allSaves = localStorage.getItem('saves')\n    allSaves = JSON.parse(allSaves)\n    this.setState({\n      saves: allSaves\n    })\n  }\n\n  //loads save chosen by user, deletes that save from storage\n  loadChosenSave = (saveIndex) => {\n    let allSaves = [...this.state.saves]\n    allSaves.splice(saveIndex, 1)\n    localStorage.setItem('saves', JSON.stringify(allSaves))\n    this.setState(prevState => {\n      return({\n        username: prevState.saves[saveIndex].username,\n        balance: prevState.saves[saveIndex].balance,\n        roundCount: prevState.saves[saveIndex].round,\n      })\n    })\n  }\n\n\n  //saves game score after game ended (on button click)\n  saveGameScore = () => {\n    let scores = localStorage.getItem('scores')\n    scores = JSON.parse(scores)\n    console.log(scores)\n    if (scores === null) {\n      scores = [{ username: this.state.username, score: this.state.balance }]\n    } else {\n      scores.push({ username: this.state.username, score: this.state.balance })\n      function compareScores(a, b) {\n        if (a.score < b.score) {\n          return 1;\n        }\n        if (a.score > b.score) {\n          return -1;\n        }\n        return 0;\n      }\n      scores.sort(compareScores);\n      localStorage.setItem('scores', JSON.stringify(scores))\n    }\n\n\n    localStorage.setItem('scores', JSON.stringify(scores))\n  }\n\n  //loads scoreboard\n  loadScoreboard = () => {\n    let scores = localStorage.getItem('scores')\n    scores = JSON.parse(scores)\n    this.setState({\n      scoreBoard: scores\n    })\n  }\n\n  //saves the game on exiting the app\n  componentWillUnmount() {\n    this.saveGame()\n  }\n\n  render() {\n    const { saveGame, nextRound, resetGameState, dealStartingHands,\n      handleBetChange, confirmBet, handleHit, loadChosenSave,\n      handleDoubleDown, dealerDraw, loadSaves, loadScoreboard, saveGameScore } = this\n    const { endGamePopup, endRoundPopup, username, bet, balance, stake,\n      playerHand, playerPoints, dealerHand, dealerPoints, roundCount, roundResult,\n      roundHistory, scoreBoard, saves } = this.state\n    return (\n      <Router>\n        <Route exact path=\"/\" render={() => <Menu\n          resetGameState={resetGameState}\n          loadSaves={loadSaves}\n          loadScoreboard={loadScoreboard}\n        />} />\n        <Route exact path=\"/username\" render={() => <NameInput\n          changeName={handleBetChange}\n          username={username}\n        />} />\n        <Route exact path=\"/betselection\" render={() => <BetSelection\n          changeBet={handleBetChange}\n          bet={bet}\n          balance={balance}\n          confirmBet={confirmBet}\n          saveGame={saveGame}\n          roundCount={roundCount}\n        />} />\n        <Route exact path=\"/game\" render={() => <PlayGame\n          bet={bet}\n          stake={stake}\n          balance={balance}\n          username={username}\n          playerPoints={playerPoints}\n          playerHand={playerHand}\n          dealerPoints={dealerPoints}\n          dealerHand={dealerHand}\n          dealStartingHands={dealStartingHands}\n          hit={handleHit}\n          doubledown={handleDoubleDown}\n          stand={dealerDraw}\n          roundCount={roundCount}\n          endRoundPopup={endRoundPopup}\n          endGamePopup={endGamePopup}\n          nextRound={nextRound}\n          saveGame={saveGame}\n          roundResult={roundResult}\n          roundHistory={roundHistory}\n          saveGameScore={saveGameScore}\n          resetGameState={resetGameState}\n        />} />\n        <Route exact path=\"/roundhistory\" render={() => <RoundHistory\n          roundHistory={roundHistory}\n        />} />\n        <Route exact path=\"/highscores\" render={() => <HighScores\n          scoreBoard={scoreBoard}\n        />} />\n        <Route exact path=\"/rules\" render={() => <Rules />} />\n        <Route exact path=\"/credits\" render={() => <Credits />} />\n        <Route exact path=\"/loadgame\" render={() => <Saves \n          saves={saves}\n          loadChosenSave={loadChosenSave}\n          />} />\n\n\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}